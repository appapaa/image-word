{"version":3,"sources":["lib/getReducer.js","redux/navigation/index.js","lib/getLocalStore.js","lib/setLocalStore.js","redux/words/index.js","redux/reducers.js","assets/const.js","components/Base.js","components/Help/index.js","screen/Menu.js","components/Learn/index.js","components/Watch.js","lib/message.js","screen/Learn.js","components/Test/index.js","screen/Test.js","components/Exclude/ListItem.js","screen/Exclude.js","components/Alert.js","App.js","lib/configureStore.js","index.js"],"names":["getReducer","PREFIX_","initialState","state","arguments","length","undefined","action","type","indexOf","_","extend","payload","reducer","path","navigationGoHome","dispatch","window","location","hash","navigationPush","id","getState","getLocalStore","name","store","localStorage","JSON","parse","setLocalStore","data","stringify","__listByWord","listByWord","wordsByChar","groupBy","keys","word","toUpperCase","studyByWord","testByWord","turn","turnTest","inverse","step","getTurn","withFirst","_getState$words","words","k","list","nextWord","forEach","l","push","index","Math","round","random","_turn","map","sortBy","union","getTurnTest","_getState2$words","v","_turnTest","changeStudy","studied","_getState4$words","_studyByWord","clone","_testByWord","size","next","_getState6$words","alert","first","combineReducers","navigation","prefixAjax","Screen","_ref","children","className","react_default","a","createElement","Panel","_ref2","Footer","_ref3","Btn","React","memo","props","onClick","_props$type","active","disabled","getRef","_props","omit","Object","assign","ref","div","Image","src","style","backgroundImage","Plugin","bottom","this","Component","defaultName","_helpBottom","isShowhelp","_onClick","text","_this","_showHelp","setState","renderBtn","key","_getRefHelp","_help","concat","ceil","offsetHeight","cnt","Base_Screen","Base_Image","BTNS","Help","mapDispatch","connect","_ref3$words","_this$props","_this$props$data","animated","examples","similar","link","translation","Base_Panel","join","comment","Watch","onChange","PureComponent","close","ReactDOM","render","document","getElementById","message","title","description","_changeWords","slice","_check","Fragment","components_Watch","w","Learn","answers","answersInverse","selects","firstTranslation","listInvers","answered","_onInverse","onInverse","_changeSelects","_this$state","includes","without","_onAnswer","_this$state2","_answers","difference","_next","changeTest","_this$state3","_this$props2","filter","find","intersection","_this2","_this$state4","_this$props3","_this$props3$data","_list","_listL","_listR","i","_getState3$words","_ref$words","Test","CHARS","char","_goToChar","_goToPrevChar","_goToNextChar","_this$props$groups","groups","ch","ListItem","Base_Footer","App","last","Menu","screen_Learn","screen_Test","Exclude","getWords","onHashChange","addEventListener","renderPlugin","Alert","ajax","then","keyBy","replace","_stores","axios","method","url","responseType","request","response","reducers","middleware","thunk","withExtraArgument","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","apply","configureStore","startApp","es","src_App","cordova"],"mappings":"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","file":"static/js/main.eaa4bd5b.chunk.js","sourcesContent":["import _ from 'lodash';\r\nconst getReducer = (PREFIX_, initialState) => {\r\n    return (state = initialState, action) => {\r\n        if (!action.type.indexOf(PREFIX_)) {\r\n            return _.extend({}, state, action.payload)\r\n        }\r\n        return state\r\n    }\r\n};\r\nexport default getReducer;","import getReducer from 'lib/getReducer'\r\nexport const PREFIX_ = 'NAVIGATION_'\r\n\r\nconst initialState = {\r\n    path: []\r\n    // path: [{ id: 'Exclude', params: { word: 'burst' } }]\r\n};\r\nexport const reducer = getReducer(PREFIX_, initialState);\r\n\r\n\r\nexport const onHashChange = () => (dispatch, getState) => {\r\n    const { navigation: { path } } = getState();\r\n    const id = (window.location.hash || '').replace('#', '');\r\n    dispatch({\r\n        type: PREFIX_ + 'ON_HASH_CHANGE',\r\n        payload: {\r\n            path: path.concat(id)\r\n        }\r\n    })\r\n}\r\nexport const navigationGoBack = () => (dispatch, getState) => {\r\n    window.history.back();\r\n};\r\n\r\nexport const navigationGoHome = () => (dispatch) => {\r\n    window.location.hash = 'Menu';\r\n}\r\n\r\n\r\nexport const navigationSet = (id) => (dispatch, getState) => {\r\n    window.location.hash = id\r\n}\r\n\r\nexport const navigationPush = (id) => (dispatch, getState) => {\r\n    window.location.hash = id;\r\n\r\n};\r\n","const getLocalStore = (name) => {\r\n    const store = window.localStorage[name];\r\n    return store\r\n        ? window.JSON.parse(store)\r\n        : undefined;\r\n}\r\nexport default getLocalStore;","const setLocalStore = (name, data) =>\r\n    window.localStorage[name] = data ?\r\n        JSON.stringify(data)\r\n        : '';\r\nexport default setLocalStore;","import getReducer from 'lib/getReducer';\r\nimport _ from 'lodash';\r\nimport { navigationPush } from 'redux/navigation';\r\nimport { navigationGoHome } from 'redux/navigation/index';\r\nimport getLocalStore from 'lib/getLocalStore';\r\nimport setLocalStore from 'lib/setLocalStore';\r\nexport const PREFIX_ = 'WORDS_'\r\n\r\nconst __listByWord = getLocalStore('words:list') || {};\r\nconst initialState = {\r\n    listByWord: __listByWord,\r\n    wordsByChar: _.groupBy(_.keys(__listByWord), (word) => word[0].toUpperCase()),\r\n    studyByWord: getLocalStore('words:stydy') || {},\r\n    testByWord: getLocalStore('words:test') || {},\r\n    turn: getLocalStore('words:turn') || [],\r\n    turnTest: getLocalStore('words:turnTest') || [],\r\n    inverse: getLocalStore('words:inverse') || false,\r\n    step: +(getLocalStore('words:step') || 0)\r\n};\r\nexport const reducer = getReducer(PREFIX_, initialState);\r\n\r\nexport const getWords = () => (dispatch, getState, { ajax }) => {\r\n    ajax('words').then(({ data }) => {\r\n        const words = _.keyBy(data, 'word');\r\n        const keys = _.keys(words);\r\n        if (_.size(words)) {\r\n            setLocalStore('words:list', words);\r\n            dispatch({\r\n                type: PREFIX_ + 'GET',\r\n                payload: {\r\n                    listByWord: words,\r\n                    wordsByChar: _.groupBy(keys, (word) => word[0].toUpperCase())\r\n                }\r\n            });\r\n            dispatch(getTurn());\r\n        }\r\n    })\r\n}\r\nexport const getTurn = (withFirst) => (dispatch, getState) => {\r\n    const { words: { turn, listByWord, studyByWord } } = getState();\r\n    let k = 0;\r\n    const list = [];\r\n    const nextWord = turn[0];\r\n    _.forEach(listByWord, (l, word) => {\r\n        if (word === nextWord) {\r\n            return k = 1;\r\n        }\r\n        !studyByWord[word]\r\n            && list.push({\r\n                word,\r\n                index: k || Math.round(Math.random() * 3000) / 100\r\n            });\r\n        if (k) {\r\n            k++;\r\n        }\r\n    })\r\n    let _turn = _.map(_.sortBy(list, 'index'), 'word');\r\n    if (withFirst) {\r\n        _turn = _.union([nextWord], _turn);\r\n    }\r\n\r\n    setLocalStore('words:turn', _turn);\r\n\r\n    dispatch({\r\n        type: PREFIX_ + 'TURN',\r\n        payload: {\r\n            turn: _turn\r\n        }\r\n    });\r\n    dispatch(getTurnTest());\r\n\r\n}\r\nexport const getTurnTest = () => (dispatch, getState) => {\r\n    const { words: { turnTest, testByWord, studyByWord } } = getState();\r\n    const list = [];\r\n    const nextWord = turnTest[0];\r\n    _.forEach(studyByWord, (v, word) => {\r\n        if (word === nextWord) {\r\n            return\r\n        }\r\n        !testByWord[word]\r\n            && list.push({\r\n                word,\r\n                index: Math.round(Math.random() * 3000) / 100\r\n            });\r\n    })\r\n    let _turnTest = _.map(_.sortBy(list, 'index'), 'word');\r\n\r\n    if (nextWord && testByWord[nextWord]) {\r\n        _turnTest = _.union([nextWord], _turnTest);\r\n    }\r\n\r\n    setLocalStore('words:turnTest', _turnTest);\r\n\r\n    dispatch({\r\n        type: PREFIX_ + 'TURN_TEST',\r\n        payload: {\r\n            turnTest: _turnTest\r\n        }\r\n    });\r\n\r\n}\r\nexport const changeTest = (word, studied = false) => (dispatch, getState) => {\r\n    const { words: { studyByWord, testByWord } } = getState();\r\n    let _testByWord = _.clone(testByWord);\r\n    if (studied) {\r\n        _testByWord[word] = 1;\r\n        if (_.size(_testByWord) === _.size(studyByWord)) {\r\n            _testByWord = {};\r\n        }\r\n        setLocalStore('words:test', _testByWord);\r\n        dispatch({\r\n            type: PREFIX_ + 'TURN_TEST',\r\n            payload: {\r\n                testByWord: _testByWord\r\n            }\r\n        });\r\n        dispatch(getTurnTest());\r\n    }\r\n    else {\r\n        dispatch(changeStudy([word]));\r\n    }\r\n\r\n}\r\nexport const changeStudy = (words, studied = false) => (dispatch, getState) => {\r\n    const { words: { studyByWord, testByWord } } = getState();\r\n    const _studyByWord = _.clone(studyByWord);\r\n    let _testByWord = _.clone(testByWord);\r\n    _.map(words, (word) => {\r\n        if (!_studyByWord[word] !== !studied) {\r\n            if (studied) {\r\n                _studyByWord[word] = 1;\r\n            }\r\n            else {\r\n                delete _studyByWord[word];\r\n                delete _testByWord[word];\r\n            }\r\n        }\r\n    });\r\n    if (_.size(_testByWord) === _.size(_studyByWord)) {\r\n        _testByWord = {};\r\n    }\r\n    setLocalStore('words:stydy', _studyByWord);\r\n    setLocalStore('words:test', _testByWord);\r\n\r\n    dispatch({\r\n        type: PREFIX_ + 'CHANGE_STUDY',\r\n        payload: {\r\n            studyByWord: _studyByWord,\r\n            testByWord: _testByWord,\r\n        }\r\n    })\r\n    dispatch(getTurn());\r\n}\r\nexport const onInverse = () => (dispatch, getState) => {\r\n    const { words: { inverse } } = getState();\r\n    setLocalStore('words:inverse', !inverse);\r\n    dispatch({\r\n        type: PREFIX_ + 'INVERSE',\r\n        payload: {\r\n            inverse: !inverse,\r\n        }\r\n    })\r\n}\r\nexport const next = (studied = false) => (dispatch, getState) => {\r\n    const { words: { turn, step } } = getState();\r\n    const nextWord = turn[0];\r\n    dispatch(changeStudy([nextWord], studied));\r\n\r\n    if (!_.size(turn) && studied) {\r\n        dispatch(navigationGoHome());\r\n        return alert('Слова закончились, уходи');\r\n    };\r\n    setLocalStore('words:next', _.first(turn));\r\n    setLocalStore('words:step', step + 1);\r\n    dispatch({\r\n        type: PREFIX_ + 'NEXT',\r\n        payload: {\r\n            step: step + 1\r\n        }\r\n    })\r\n    dispatch(getTurn(true));\r\n    dispatch(navigationPush('Learn', { word: _.first(turn) }));\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport { reducer as words } from './words';\r\nimport { reducer as navigation } from './navigation';\r\n\r\nexport default combineReducers({\r\n    navigation,\r\n    words\r\n});","export const colors = {\r\n    primary: '#4169E1',\r\n    blue: '#4169E1',\r\n    red: '#e2131c',\r\n};\r\nexport const prefixAjax = 'https://image-word.000webhostapp.com/api/';\r\nexport const prefixImg = prefixAjax + 'img/';","import React from 'react';\r\nimport _ from 'lodash'\r\nimport { prefixImg } from 'assets/const';\r\nexport const Screen = ({ children, className }) =>\r\n    <div className={'app-ui-screen' + (className ? ' ' + className : '')}>{children}</div>;\r\n\r\nexport const Panel = ({ children, className }) =>\r\n    <div className={'app-ui-panel' + (className ? ' ' + className : '')}>{children}</div>;\r\n\r\nexport const Footer = ({ children, className }) =>\r\n    <div className={'app-ui-footer' + (className ? ' ' + className : '')}>{children}</div>;\r\n\r\nexport const Content = ({ children, className }) =>\r\n    <div className={'app-ui-content' + (className ? ' ' + className : '')}>{children}</div>;\r\n\r\nexport const Btn = React.memo((props) => {\r\n    const { className, onClick, type = '', children, active, disabled, getRef } = props;\r\n    const _props = _.omit(props, ['className', 'type', 'onClick', 'children', 'active', 'disabled']);\r\n    return (\r\n        <div\r\n            ref={div => getRef && getRef(div)}\r\n            {..._.omit(_props, 'getRef')}\r\n            className={'app-ui-btn' + type\r\n                + (className ? ' ' + className : '')\r\n                + (active ? ' -active' : '')\r\n                + (disabled ? ' -disabled' : '')}\r\n            onClick={disabled ? undefined : onClick}>\r\n            {children}\r\n        </div>\r\n    );\r\n})\r\n\r\nexport const Image = (props) => {\r\n    const { className, src } = props;\r\n    const _props = _.omit(props, ['className', 'src', 'onClick']);\r\n    return (\r\n        <div\r\n            style={{ backgroundImage: 'url(' + prefixImg + src + ')' }}\r\n            {..._props}\r\n            className={'app-ui-image' + (className ? ' ' + className : '')}\r\n        />);\r\n}","import React, { Component } from 'react';\r\n\r\nclass Plugin extends Component {\r\n  render() {\r\n    const { bottom } = this.props;\r\n    return (\r\n      <div className='app-menu-help' style={{ bottom }}>\r\n        <div className='app-menu-help-num'>1</div>\r\n        <div className='app-menu-help-text'>\r\n          изучай новый материал с\r\n          помощью кнопки “learn”.\r\n          Кнопка “got it” добавит\r\n          слово в тестовый модуль и\r\n          исключит его из словаря\r\n          обучения. Количество слов\r\n          к обучению отражается в\r\n          счётчике на главном\r\n        экране\r\n        </div>\r\n        <div className='app-menu-help-num'>2</div>\r\n        <div className='app-menu-help-text'>\r\n          исключай/возвращай\r\n          слова в модуль обучения\r\n          с помощью “exclude”\r\n        </div>\r\n\r\n        <div className='app-menu-help-num'>3</div>\r\n        <div className='app-menu-help-text'>\r\n          проверяй свои знания на\r\n          вкладке “test” после\r\n          прохождения обучения\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nPlugin.defaultName = 'Help';\r\n\r\nexport default Plugin;\r\n","import React, { Component } from 'react';\r\nimport { Screen, Btn, Image } from 'components/Base';\r\nimport { connect } from \"react-redux\";\r\nimport { navigationPush } from 'redux/navigation';\r\nimport _ from 'lodash';\r\nimport Help from 'components/Help';\r\n\r\nclass Plugin extends Component {\r\n  _helpBottom = null;\r\n  state = {\r\n    isShowhelp: false\r\n  }\r\n  _onClick = ({ id, text }) => {\r\n    const { navigationPush } = this.props;\r\n    navigationPush(id);\r\n  }\r\n  _showHelp = () => {\r\n    const { isShowhelp } = this.state;\r\n    this.setState({ isShowhelp: !isShowhelp })\r\n  }\r\n  renderBtn = ({ id, text }) => {\r\n    return <Btn\r\n      className='app-menu-btn'\r\n      key={id}\r\n      onClick={() => this._onClick({ id, text })}\r\n    >{text}</Btn>\r\n  };\r\n  componentDidMount() {\r\n    this._helpBottom = `calc(${Math.ceil(this._help.offsetHeight)}px + 5vw + 2vh)`;\r\n  }\r\n  _getRefHelp = (div) => {\r\n    this._help = div;\r\n  }\r\n  render() {\r\n    const { isShowhelp } = this.state;\r\n    const { cnt } = this.props;\r\n    return (\r\n      <Screen className=\"app-menu\">\r\n        <div className='app-cnt'>слов к обучению: {cnt}</div>\r\n        <Image className='app-menu-img' src='/menu.png' />\r\n        <div className='app-menu-btngroup'>\r\n          {_.map(BTNS, this.renderBtn)}\r\n          <Btn\r\n            getRef={this._getRefHelp}\r\n            active={isShowhelp}\r\n            className='app-menu-btn'\r\n            onClick={this._showHelp}\r\n          >help</Btn>\r\n        </div>\r\n        {isShowhelp ? <Help bottom={this._helpBottom} /> : ''}\r\n      </Screen>\r\n    );\r\n  }\r\n}\r\nconst BTNS = [\r\n  { id: 'Test', text: 'test' },\r\n  { id: 'Learn', text: 'learn' },\r\n  { id: 'Exclude', text: 'exclude' }\r\n];\r\nPlugin.defaultName = 'MenuScreen';\r\n\r\nconst mapState = ({ words: { listByWord, studyByWord } }) => ({\r\n  studyByWord,\r\n  cnt: _.size(listByWord) - _.size(studyByWord) || 'нет'\r\n});\r\nconst mapDispatch = { navigationPush };\r\n\r\nexport default connect(mapState, mapDispatch)(Plugin);\r\n","import React, { Component } from 'react';\r\nimport { Screen, Panel, Btn, Image } from 'components/Base';\r\nimport { connect } from \"react-redux\";\r\nimport { navigationGoHome } from 'redux/navigation';\r\nimport { next } from 'redux/words';\r\nimport _ from 'lodash';\r\n\r\nclass Plugin extends Component {\r\n  render() {\r\n    const { navigationGoHome, data = {}, next, animated } = this.props;\r\n    const { word, examples, similar, link, translation } = data;\r\n    return (\r\n      <Screen className={\"app-learn\" + (animated ? ' fadeInRight faster' : '')}>\r\n        <Panel className=\"app-learn-panel\">\r\n          <Btn\r\n            className='app-nav-btn'\r\n            onClick={navigationGoHome}>home</Btn>\r\n        </Panel>\r\n        <div className='app-learn-word'>\r\n          {word}\r\n          {_.size(similar) ? ' / ' + similar.join(', ') : ''}\r\n        </div>\r\n        <div className='app-learn-content'>\r\n          <Image src={link} />\r\n          <div className='app-learn-translation'>\r\n            {_.map(translation, (l) =>\r\n              l.word + (l.comment ? ' (' + l.comment + ')' : ''))\r\n              .join(', ')}\r\n          </div>\r\n          <div className='app-learn-examples'>\r\n            {examples ? examples.join('\\n') : ''}\r\n          </div>\r\n        </div>\r\n        <div className='app-learn-footer' >\r\n          <Btn\r\n            className='app-learn-btn'\r\n            onClick={() => next()}>show later</Btn>\r\n          <Btn\r\n            className='app-learn-btn'\r\n            active\r\n            onClick={() => next(true)}>got it</Btn>\r\n        </div>\r\n      </Screen>\r\n    );\r\n  }\r\n}\r\nPlugin.defaultName = 'Learn';\r\n\r\nconst mapState = ({ words: { listByWord } }, { word }) => ({\r\n  data: listByWord[word]\r\n});\r\nconst mapDispatch = { navigationGoHome, next };\r\n\r\nexport default connect(mapState, mapDispatch)(Plugin);\r\n","import { PureComponent } from 'react';\r\n\r\nclass Watch extends PureComponent {\r\n    componentDidMount() {\r\n        this.props.onChange(this.props);\r\n    }\r\n    componentDidUpdate() {\r\n        this.props.onChange(this.props);\r\n    }\r\n    render() {\r\n        return '';\r\n    }\r\n}\r\nexport default Watch;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nconst close = () => {\r\n    ReactDOM.render(\r\n        ''\r\n        , document.getElementById('alert_window'));\r\n}\r\nconst message = (title, description) => {\r\n\r\n    ReactDOM.render(\r\n        <div onClick={close} className='app-message_container'>\r\n            <div onClick={close} className='app-message'>\r\n                <div className='app-message-header'>Oops!</div>\r\n                <div className='app-message-body'>\r\n                    <div className='app-message-title'>{title}</div>\r\n                    <div className='app-message-description'>{description}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        , document.getElementById('alert_window'));\r\n};\r\nexport default message;","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { navigationGoHome } from 'redux/navigation';\r\nimport { next } from 'redux/words';\r\nimport _ from 'lodash';\r\nimport Learn from 'components/Learn';\r\nimport Watch from 'components/Watch';\r\nimport message from 'lib/message';\r\n\r\nclass Plugin extends Component {\r\n  state = {\r\n    words: []\r\n  }\r\n  _changeWords = () => {\r\n    const { words } = this.state;\r\n    const { word } = this.props;\r\n    this.setState({\r\n      words: words.concat(word).slice(-2)\r\n    })\r\n    this._check();\r\n  }\r\n  _check = () => {\r\n    const { word, navigationGoHome } = this.props;\r\n    if (!word) {\r\n      navigationGoHome();\r\n      message('Слова закончились.\\nУходи.', 'Ну или проверь знания в “test”\\n\\nСписок слов, помеченные как “got it”, можно скорректировать в “exclude”');\r\n    }\r\n  }\r\n  render() {\r\n    const { words } = this.state;\r\n    const { word } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n\r\n        <Watch word={word} onChange={this._changeWords} />\r\n        {word\r\n          ? _.map(words, w =>\r\n            <Learn key={w} word={w} animated={_.size(words) > 1} />)\r\n          : ''}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nPlugin.defaultName = 'LearnScreen';\r\n\r\nconst mapState = ({ words: { turn } }) => ({\r\n  word: turn[0]\r\n});\r\nconst mapDispatch = { navigationGoHome, next };\r\n\r\nexport default connect(mapState, mapDispatch)(Plugin);\r\n","import React, { Component } from 'react';\r\nimport { Screen, Panel, Btn } from 'components/Base';\r\nimport { connect } from \"react-redux\";\r\nimport { navigationGoHome } from 'redux/navigation';\r\nimport { changeTest, onInverse } from 'redux/words';\r\nimport _ from 'lodash';\r\n\r\nclass Plugin extends Component {\r\n  state = {\r\n    list: [],\r\n    answers: [],\r\n    answersInverse: [],\r\n    selects: [],\r\n    firstTranslation: null,\r\n    listInvers: [],\r\n    cnt: null,\r\n    answered: false\r\n  }\r\n  componentDidMount() {\r\n    const { listByWord, word, data } = this.props;\r\n    let list = [];\r\n    let listInvers = [];\r\n    let firstTranslation = data.translation[0].word;\r\n    _.forEach(_.sortBy(listByWord, () => Math.random()).slice(0, 20), (l) => {\r\n      if (l.word === word) {\r\n        return;\r\n      }\r\n      list = list.concat(_.map(l.translation, 'word'));\r\n      listInvers = listInvers.concat([l.word]);\r\n    });\r\n    list = _.sortBy(_.union(\r\n      _.map(data.translation, 'word'),\r\n      list\r\n    ).slice(0, 8), () => Math.random());\r\n\r\n    listInvers = _.sortBy(_.union(\r\n      [word],\r\n      listInvers\r\n    ).slice(0, 8), () => Math.random());\r\n\r\n    const answersInverse = _.filter(listInvers, (key) =>\r\n      !!_.find(listByWord[key].translation, l => l.word === firstTranslation));\r\n    this.setState({\r\n      list,\r\n      listInvers,\r\n      firstTranslation,\r\n      answers: _.intersection(_.map(data.translation, 'word'), list),\r\n      answersInverse\r\n    });\r\n  }\r\n  _onInverse = () => {\r\n    const { answered } = this.state;\r\n    const { onInverse } = this.props;\r\n\r\n    !answered && this.setState({\r\n      selects: []\r\n    });\r\n    onInverse();\r\n  }\r\n  _changeSelects = (text) => {\r\n    const { selects, answered } = this.state;\r\n\r\n    !answered && this.setState({\r\n      selects: _.includes(selects, text)\r\n        ? _.without(selects, text)\r\n        : _.union(selects, [text])\r\n    });\r\n  }\r\n  _onAnswer = () => {\r\n    const { answered,\r\n      answersInverse, answers, selects } = this.state;\r\n    const { inverse } = this.props;\r\n    if (answered) {\r\n      return;\r\n    }\r\n    const _answers = inverse ? answersInverse : answers;\r\n\r\n    this.setState({\r\n      answered: true,\r\n      cnt: _.size(selects) > _.size(_answers)\r\n        ? _.size(_.difference(selects, _answers))\r\n        : _.size(_.difference(_answers, selects))\r\n    });\r\n  }\r\n  _next = () => {\r\n    const { answered, changeTest, inverse, word } = this.props;\r\n    const { answersInverse, answers, cnt } = this.state;\r\n    let studied = false;\r\n    if (answered) {\r\n      const _answers = inverse ? answersInverse : answers;\r\n      if (!inverse && cnt === _.size(answers)) {\r\n        studied = true;\r\n      }\r\n      else if (inverse && _.includes(_answers, word)) {\r\n        studied = true;\r\n      }\r\n    }\r\n    changeTest(word, studied);\r\n  }\r\n  render() {\r\n    const { list, listInvers, firstTranslation, answered, cnt,\r\n      answersInverse, answers, selects } = this.state;\r\n    const { navigationGoHome, inverse, data = {} } = this.props;\r\n    const { word, similar } = data;\r\n    const _list = inverse ? listInvers : list;\r\n    const _answers = inverse ? answersInverse : answers;\r\n    const _listL = _list.slice(0, 4);\r\n    const _listR = _list.slice(4);\r\n\r\n    return (\r\n      <Screen className=\"app-test\">\r\n        <Panel className=\"app-test-panel\">\r\n          <Btn\r\n            className='app-nav-btn'\r\n            onClick={navigationGoHome}>home</Btn>\r\n          <div className='app-line-black' />\r\n          <Btn\r\n            active={inverse}\r\n            className='app-nav-btn'\r\n            onClick={this._onInverse}>inverse</Btn>\r\n        </Panel>\r\n        <div className='app-test-content'>\r\n          <div className='app-test-list'>\r\n            {_.map([0, 1], (i) => <div\r\n              key={'list-' + i}\r\n              className={'app-test-list-' + (i ? 'right' : 'left')}\r\n            >\r\n              {_.map(i ? _listR : _listL, (text) =>\r\n                <Btn\r\n                  active={_.includes(answered ? _answers : selects, text)}\r\n                  onClick={() => this._changeSelects(text)}\r\n                  key={text}\r\n                  className='app-test-text_btn'\r\n                >{text}</Btn>)}\r\n            </div>)}\r\n          </div>\r\n          <div className='app-test-word'>\r\n            {inverse\r\n              ? firstTranslation\r\n              : word + ' ' + (_.size(similar) ? ' / ' + similar.join(', ') : '')}\r\n          </div>\r\n          <div className='app-test-info'>\r\n            {answered\r\n              ? cnt === 0\r\n                ? 'correct'\r\n                : (\r\n                  _.size(_.difference(_answers, selects)) === _.size(_answers)\r\n                    ? 'all'\r\n                    : cnt\r\n                ) + ' incorrect'\r\n              : _.size(_answers) > 1\r\n                ? 'Several options'\r\n                : 'One option'\r\n            }\r\n          </div>\r\n        </div>\r\n        <div className='app-test-footer' >\r\n          <Btn\r\n            active={answered}\r\n            onClick={this._onAnswer}\r\n            className='app-test-btn'>answer</Btn>\r\n          <div className='app-line-black' />\r\n          <Btn\r\n            onClick={this._next}\r\n            className='app-test-btn'>next</Btn>\r\n        </div>\r\n      </Screen>\r\n    );\r\n  }\r\n}\r\nPlugin.defaultName = 'Test';\r\n\r\n\r\nconst mapState = ({ words: { inverse, listByWord, studyByWord } }, { word }) => ({\r\n  data: listByWord[word],\r\n  inverse,\r\n  listByWord, studyByWord\r\n});\r\nconst mapDispatch = { navigationGoHome, changeTest, onInverse };\r\n\r\nexport default connect(mapState, mapDispatch)(Plugin);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { navigationGoHome } from 'redux/navigation';\r\nimport { next } from 'redux/words';\r\nimport _ from 'lodash';\r\nimport Watch from 'components/Watch';\r\nimport Test from 'components/Test';\r\nimport message from 'lib/message';\r\n\r\nclass Plugin extends Component {\r\n  state = {\r\n    words: []\r\n  }\r\n  _changeWords = () => {\r\n    const { words } = this.state;\r\n    const { word } = this.props;\r\n    this.setState({\r\n      words: words.concat(word).slice(-2)\r\n    });\r\n    this._check();\r\n  }\r\n  _check = () => {\r\n    const { word, navigationGoHome } = this.props;\r\n    if (!word) {\r\n      navigationGoHome();\r\n      message('Нечего тестировать.');\r\n    }\r\n  }\r\n  render() {\r\n    const { words } = this.state;\r\n    const { word } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n\r\n        <Watch word={word} onChange={this._changeWords} />\r\n        {word\r\n          ? _.map(words, w =>\r\n            <Test key={w} word={w} animated={_.size(words) > 1} />)\r\n          : ''\r\n        }\r\n\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nPlugin.defaultName = 'TestScreen';\r\n\r\nconst mapState = ({ words: { turnTest } }) => ({\r\n  word: turnTest[0]\r\n});\r\nconst mapDispatch = { navigationGoHome, next };\r\n\r\nexport default connect(mapState, mapDispatch)(Plugin);\r\n","import React, { Component } from 'react';\r\nimport { Btn } from 'components/Base';\r\nimport { connect } from \"react-redux\";\r\nimport { changeStudy } from 'redux/words';\r\nclass Plugin extends Component {\r\n    render() {\r\n        const { data: { word }, studied, changeStudy } = this.props;\r\n        return (\r\n            <Btn\r\n                className='app-exclude-list-item'\r\n                active={studied}\r\n                onClick={() => changeStudy([word], !studied)}\r\n            >{word}\r\n            </Btn>\r\n        );\r\n    }\r\n}\r\nPlugin.defaultName = 'ListItem';\r\n\r\nconst mapState = ({ words: { listByWord, studyByWord } }, { word }) => ({\r\n    data: listByWord[word],\r\n    studied: !!studyByWord[word]\r\n});\r\nconst mapDispatch = { changeStudy };\r\n\r\nexport default connect(mapState, mapDispatch)(Plugin);\r\n","import React, { Component } from 'react';\r\nimport { Screen, Panel, Btn, Footer } from 'components/Base';\r\nimport { connect } from \"react-redux\";\r\nimport { navigationGoHome } from 'redux/navigation';\r\nimport { changeStudy } from 'redux/words';\r\nimport _ from 'lodash';\r\nimport ListItem from 'components/Exclude/ListItem';\r\nconst CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\nclass Plugin extends Component {\r\n  state = {\r\n    char: 'A'\r\n  }\r\n  _goToChar = (char) => this.setState({ char });\r\n\r\n  _goToPrevChar = (char) => this.setState({\r\n    char: CHARS[CHARS.indexOf(char) - 1]\r\n  });\r\n\r\n  _goToNextChar = (char) => this.setState({\r\n    char: CHARS[CHARS.indexOf(char) + 1]\r\n  });\r\n\r\n  render() {\r\n    const { navigationGoHome, groups = {}, changeStudy } = this.props;\r\n    const { char } = this.state;\r\n    const list = groups[char];\r\n    return (\r\n      <Screen className=\"app-exclude\">\r\n        <Panel className=\"app-exclude-panel\">\r\n          <Btn\r\n            className='app-nav-btn'\r\n            onClick={navigationGoHome}>home</Btn>\r\n        </Panel>\r\n        <div className='app-exclude-content-left'>\r\n          {_.map(CHARS, ch => <Btn\r\n            onClick={() => this._goToChar(ch)}\r\n            className='app-exclude-btn-char'\r\n            active={char === ch}\r\n            key={ch}\r\n          >{ch}</Btn>)}\r\n        </div>\r\n        <div className='app-exclude-content'>\r\n          <div className='app-exclude-content__list app-ui-scroll'>\r\n            {char !== 'A' && <Btn\r\n              className='app-exclude-list-item'\r\n              onClick={() => this._goToPrevChar(char)}\r\n            >previouse letter</Btn>}\r\n            {/* {_.size(list) && _.map(_.range(100), i =>\r\n              <ListItem key={i} word={list[0]} />)} */}\r\n            {_.map(list, word =>\r\n              <ListItem key={word} word={word} />)}\r\n            {char !== 'Z' && <Btn\r\n              className='app-exclude-list-item'\r\n              onClick={() => this._goToNextChar(char)}\r\n            >next letter</Btn>}\r\n          </div>\r\n          <div className='app-exclude-content__before' />\r\n          <div className='app-exclude-content__after' />\r\n        </div>\r\n        <Footer className=\"app-exclude-footer\">\r\n          <Btn\r\n            className='app-nav-btn'\r\n            onClick={() => _.size(list) && changeStudy(list, false)}\r\n          >deselect all</Btn>\r\n        </Footer>\r\n      </Screen>\r\n    );\r\n  }\r\n}\r\nPlugin.defaultName = 'Exclude';\r\n\r\nconst mapState = ({ words: { wordsByChar } }) => ({\r\n  groups: wordsByChar\r\n});\r\nconst mapDispatch = { navigationGoHome, changeStudy };\r\n\r\nexport default connect(mapState, mapDispatch)(Plugin);\r\n","import React, { Component } from 'react';\r\nclass Plugin extends Component {\r\n    render() {\r\n        return <div id='alert_window' />\r\n    }\r\n};\r\nPlugin.defaultName = 'Test';\r\n\r\nexport default Plugin;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport 'assets/css/App.scss';\r\nimport 'assets/css/animate.css';\r\nimport Menu from 'screen/Menu';\r\nimport Learn from 'screen/Learn';\r\nimport Test from 'screen/Test';\r\nimport Exclude from 'screen/Exclude';\r\nimport { getWords } from 'redux/words';\r\nimport { onHashChange } from 'redux/navigation';\r\nimport _ from 'lodash';\r\nimport Alert from 'components/Alert';\r\nclass App extends Component {\r\n  renderPlugin() {\r\n    const { path } = this.props;\r\n    const plugin = _.last(path) || 'Menu';\r\n    switch (plugin) {\r\n      case 'Menu':\r\n        return <Menu />;\r\n      case 'Learn':\r\n        return <Learn />;\r\n      case 'Test':\r\n        return <Test />;\r\n      case 'Exclude':\r\n        return <Exclude />;\r\n      default: return <div>Нет такого экрана</div>\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    const { getWords, onHashChange } = this.props;\r\n    getWords();\r\n    onHashChange();\r\n    window.addEventListener(\"hashchange\", onHashChange, false);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        {this.renderPlugin()}\r\n        <Alert />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapState = ({ navigation }) => {\r\n  return {\r\n    path: navigation.path\r\n  }\r\n\r\n};\r\nconst mapDispatch = { getWords, onHashChange };\r\n\r\nexport default connect(mapState, mapDispatch)(App);\r\n","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { createLogger } from 'redux-logger'\r\nimport axios from 'axios';\r\nimport { prefixAjax } from 'assets/const';\r\n\r\nconst _stores = { store: {} };\r\nconst ajax = (name) => axios({\r\n    method: 'get',\r\n    url: prefixAjax + 'get.php?name=' + name,\r\n    responseType: 'json',\r\n}).then(({ request }) => request.response);\r\n\r\nexport default (reducers) => {\r\n\r\n    const middleware = [thunk.withExtraArgument({ ajax })];\r\n    const composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n    if (process.env.NODE_ENV !== 'production') middleware.push(createLogger());\r\n    _stores.store = createStore(\r\n        reducers,\r\n        composeEnhancer(applyMiddleware(...middleware))\r\n    );\r\n    return _stores.store;\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'assets/css/index.scss';\r\nimport { Provider } from 'react-redux';\r\nimport reducers from 'redux/reducers';\r\nimport App from 'App';\r\nimport configureStore from 'lib/configureStore';\r\n\r\nconst store = configureStore(reducers)\r\nconst startApp = () => {\r\n    ReactDOM.render(\r\n        <Provider store={store}>\r\n            <App />\r\n        </Provider>\r\n        , document.getElementById('root'));\r\n};\r\nif (window.cordova) {\r\n    document.addEventListener('deviceready', startApp, false);\r\n} else {\r\n    startApp();\r\n}"],"sourceRoot":""}